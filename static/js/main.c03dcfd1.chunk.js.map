{"version":3,"sources":["data/compas.csv","data/adult.csv","util/generateSubgroups.js","util/clusterDescriptions.js","util/globals.js","workers/dataLoader.js","workers/WebWorker.js","components/ClassDistribution.js","components/MetricsDistribution.js","components/ExpandedCard.js","components/Histogram.js","components/FeatureDrawer.js","components/ClusterDistribution.js","util/neighboringClusters.js","components/GroupSuggestions.js","components/MetricSelector.js","components/StripPlot.js","components/Welcome.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","createSubgroups","data","groups","nextId","allFeatures","allValues","sub","Map","groupFeatures","Object","keys","forEach","inst","key","vals","include","feat_name","v","includes","length","push","slice","old","get","undefined","set","insts","subgroups","metrics","i","group","fm","calculateFairnessMetrics","dist","f","thisVals","v_dist","item","entries","tuple","collator","Intl","Collator","numeric","sensitivity","distrib_arr","r","sort","a","b","compare","calcValueDist","id","feats","type","distrib","calculateSubgroupMetrics","m","items","p","n","tp","tn","fp","fn","predicted","Math","round","parseFloat","actual","parseInt","calculateBaseRates","size","acc","rec","spec","prec","npv","fnr","fpr","fdr","for","f1","k","isNaN","getClusters","features","splice","indexOf","all_atts","attr","s","Set","map","clustInstances","cluster","concat","_toConsumableArray","clustDistributions","clustDistrib","feat","featDistrib","clustEntropies","_","clustEntr","arr","log2","shannonEntropy","clustDefining","orderedFeats","orderedVals","reduce","clusterid","METRICS","label","value","self","addEventListener","e","out","avgs","_loop","s_arr","Array","from","postMessage","WebWorker","_createClass","worker","_classCallCheck","code","toString","blob","Blob","Worker","URL","createObjectURL","$schema","mark","tooltip","width","transform","calculate","as","encoding","y","field","axis","title","labelFontSize","labelPadding","x","aggregate","format","color","scale","domain","range","legend","ClassDistribution","_Component","_inherits","_super","_createSuper","apply","arguments","this","props","clickedGroup","name","val","hoveredGroup","React","createElement","VegaLite","values","Component","height","spacing","row","padding","header","labelLimit","labels","MetricsDistribution","_this","selectedMetrics","metric","styles","card","marginTop","marginRight","overflow","featureStyle","textAlign","avatar","backgroundColor","expand","margin","hovered","paddingRight","clicked","display","flexDirection","justifyContent","marginBottom","selectedGroups","paddingLeft","hoveredCell","ExpandedCard","_len","args","_key","call","export","activeGroups","text","filename","document","setAttribute","encodeURIComponent","click","saveText","JSON","stringify","nextProps","nextState","_this2","classes","featsClick","featsHov","TableCell","clickedCell","align","className","TableRow","Card","CardContent","Button","exportButton","variant","onClick","Divider","Paper","Table","table","style","TableHead","tableHeader","TableBody","withStyles","Histogram","update","drawGlobalDistBar","dataDistrib","featName","featIndex","maxy","groupIndex","drawGroupDistBar","drawBar","d3","remove","feat_dist_arr","data_arr","bar_type","node","svg","append","state","left","top","rangeRound","d","hght","tip","d3tip","offset","html","selectAll","enter","bandwidth","on","show","hide","right","bottom","ref","drawer","flexShrink","maxWidth","feature","button","listItem","paddingBottom","alignItems","listText","radio","divider","boxLabel","textTransform","fontSize","fontWeight","info","cursor","FeatureDrawer","compareState","oldState","newState","opened","checked","subchecked","handleToggle","newChecked","has","delete","add","setState","handleSubToggle","feat_i","item_i","_this$state","subnew","handleClick","newOpened","handleHover","j","selector","handleUnhover","handleClickSubgroup","val_arr","valIndex","max_ys","Drawer","paper","anchor","List","ListItem","Tooltip","placement","ListItemSecondaryAction","Checkbox","onChange","disabled","Collapse","in","timeout","unmountOnExit","value_i","onMouseOver","onMouseOut","ListItemText","primary","order","ClusterDistribution","makeup","maxVal","getNeighbors","subgroup","oneAwayGroups","same","diffFeatInd","ind","GroupSuggestions","mouseEnter","suggestedHover","mouseLeave","suggestedUnhover","mouseClick","suggestedClick","pageRight","page","clusters","pageLeft","changeView","target","showSimilar","neighbors","changeSort","clustersLoaded","similarGroups","neigh","index","onMouseEnter","onMouseLeave","cardContent","diffTable","featDiff","FormControl","Select","MenuItem","settings","Typography","sortText","headerDivider","cards","filter","clust","minSize","leftCell","cell","paging","ChevronLeft","ChevronRight","marginLeft","fab","float","flexWrap","inputComponent","_ref","inputRef","_objectWithoutProperties","_excluded","assign","components","Control","TextField","fullWidth","InputProps","inputProps","_objectSpread","selectProps","input","innerRef","children","innerProps","textFieldProps","Menu","square","MultiValue","Chip","tabIndex","classNames","chip","_defineProperty","chipFocused","isFocused","onDelete","removeProps","deleteIcon","CancelIcon","NoOptionsMessage","noOptionsMessage","Option","buttonRef","selected","component","isSelected","Placeholder","placeholder","ValueContainer","valueContainer","MetricSelector","handleChange","onMetricChange","selectedOptions","suggs","suggestions","selectorWrapper","options","isMulti","theme","minWidth","flex","unit","emphasize","palette","grey","position","zIndex","StripPlot","createStripPlot","xAxis","select","xScale","barHover","barClick","avgG","toFixed","yScale","tickPadding","ticks","tickFormat","prevProps","plot","body","content","subtitle","flexGrow","tagline","loadingScreen","minHeight","loadingText","paddingTop","loadingProgress","datasets","tabletitle","adddata","dataLink","textDecorationColor","textDecoration","socialLink","background","fontFamily","borderColor","borderRadius","social","icon","Welcome","loadIcon","Fragment","loading","CircularProgress","scope","href","loadData","adultData","compasData","FaScroll","FaMedium","FaGithub","FaGlobe","ReactGA","initialize","pageview","window","location","pathname","search","createMuiTheme","main","secondary","overrides","MuiSlider","thumb","track","appBar","slider","reset","App","loaderWorker","dataLoaded","then","classed","foundArr","el","newActives","changeMinSize","resetGroups","handleMetricsChange","MuiThemeProvider","AppBar","Toolbar","inline","Slider","step","min","max","metricSelector","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c03dcfd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/compas.bd26b7d4.csv\";","module.exports = __webpack_public_path__ + \"static/media/adult.94c06f58.csv\";","/** Since ES6 Maps do equality by reference, objects can't really be used as keys.\r\n *  Here we simply use a concatenated string as the key.\r\n **/\r\nexport function createSubgroups(data, groups, nextId, allFeatures, allValues) {\r\n  let sub = new Map();\r\n\r\n  let groupFeatures = Object.keys(groups);\r\n\r\n  data.forEach(inst => {\r\n    let key = \"\";\r\n    let vals = [];\r\n\r\n    let include = true;\r\n\r\n    groupFeatures.forEach(feat_name => {\r\n      let v = inst[feat_name];\r\n      if (groups[feat_name].includes(v) || groups[feat_name].length === 0) {\r\n        vals.push(v);\r\n        key += v + \", \";\r\n      } else {\r\n        include = false;\r\n      }\r\n    });\r\n\r\n    if (include) {\r\n      //  Remove last \", \"\r\n      key = key.slice(0, -2);\r\n\r\n      // If key doesn't exist add entry, else push to group\r\n      let old = sub.get(key);\r\n      if (old === undefined) {\r\n        sub.set(key, { vals: vals, insts: [inst] });\r\n      } else {\r\n        old[\"insts\"].push(inst);\r\n        sub.set(key, old);\r\n      }\r\n    }\r\n  });\r\n\r\n  return calculateSubgroupMetrics(\r\n    sub,\r\n    nextId,\r\n    groupFeatures,\r\n    allFeatures,\r\n    allValues\r\n  );\r\n}\r\n\r\n/**\r\n * Calculate Common Fairness Metrics\r\n *\r\n * @param counts: counts of tp, tn, fp, tn, p, n\r\n * Note:\r\n * acc = accuracy\r\n * rec = recall\r\n * prec = precision\r\n * spec = specificity\r\n * npv = negative predictive value\r\n * fnr = false negative rate or miss rate\r\n * fpr = false positive rate\r\n * fdr = false discovery rate\r\n * for = false omission rate\r\n * f1 = f1 score\r\n */\r\nexport function calculateFairnessMetrics(data) {\r\n  let m = calculateBaseRates(data);\r\n\r\n  let metrics = {\r\n    size: data.length,\r\n    p: (100 * m.p) / data.length,\r\n    n: (100 * m.n) / data.length,\r\n    acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\r\n    rec: (100 * m.tp) / (m.tp + m.fn),\r\n    spec: (100 * m.tn) / (m.fp + m.tn),\r\n    prec: (100 * m.tp) / (m.tp + m.fp),\r\n    npv: (100 * m.tn) / (m.tn + m.fn),\r\n    fnr: (100 * m.fn) / (m.fn + m.tp),\r\n    fpr: (100 * m.fp) / (m.fp + m.tn),\r\n    fdr: (100 * m.fp) / (m.fp + m.tp),\r\n    for: (100 * m.fn) / (m.fn + m.tn),\r\n    f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\r\n  };\r\n\r\n  Object.keys(metrics).forEach(k => {\r\n    if (isNaN(metrics[k])) {\r\n      metrics[k] = 0;\r\n    }\r\n  });\r\n\r\n  return metrics;\r\n}\r\n\r\n/** Calculate performance metrics for all subgroups */\r\nfunction calculateSubgroupMetrics(\r\n  subgroups,\r\n  nextId,\r\n  groupFeatures,\r\n  allFeatures,\r\n  allValues\r\n) {\r\n  let metrics = [];\r\n\r\n  // Keep track of the ID for all active subgroups\r\n  let i = nextId;\r\n\r\n  subgroups.forEach((group, key) => {\r\n    let fm = calculateFairnessMetrics(group.insts);\r\n    let dist = calcValueDist(group.insts, allFeatures, allValues);\r\n\r\n    metrics.push({\r\n      id: i,\r\n      feats: groupFeatures,\r\n      vals: group.vals,\r\n      insts: group.insts,\r\n      metrics: fm,\r\n      type: \"top\",\r\n      distrib: dist\r\n    });\r\n    i++;\r\n  });\r\n\r\n  return metrics;\r\n}\r\n\r\n/** Calculate the base classification COUNTS for a group of instances */\r\nfunction calculateBaseRates(items) {\r\n  let p = 0;\r\n  let n = 0;\r\n  let tp = 0;\r\n  let tn = 0;\r\n  let fp = 0;\r\n  let fn = 0;\r\n\r\n  items.forEach(item => {\r\n    let predicted = Math.round(parseFloat(item[\"out\"]));\r\n    let actual = parseInt(item[\"class\"], 10);\r\n\r\n    if (predicted === 1 && actual === 1) {\r\n      tp++;\r\n      p++;\r\n    } else if (predicted === 0 && actual === 0) {\r\n      tn++;\r\n      n++;\r\n    } else if (predicted === 1 && actual === 0) {\r\n      fp++;\r\n      n++;\r\n    } else {\r\n      fn++;\r\n      p++;\r\n    }\r\n  });\r\n\r\n  return {\r\n    p: p,\r\n    n: n,\r\n    tp: tp,\r\n    tn: tn,\r\n    fp: fp,\r\n    fn: fn\r\n  };\r\n}\r\n\r\nfunction calcValueDist(insts, allFeatures, allValues) {\r\n  // init dist\r\n  let dist = {};\r\n  allFeatures.forEach((f, i) => {\r\n    let thisVals = allValues[i];\r\n    let v_dist = {};\r\n    thisVals.forEach((v, i) => {\r\n      v_dist[v] = 0;\r\n    });\r\n    dist[f] = v_dist;\r\n  });\r\n\r\n  // populate dist\r\n  insts.forEach((item, i) => {\r\n    Object.entries(item).forEach(tuple => {\r\n      // tuple = [\"age\", 17]\r\n      dist[tuple[0]][tuple[1]] += 1;\r\n    });\r\n  });\r\n\r\n  // turn into array with values sorted\r\n  let collator = new Intl.Collator(undefined, {\r\n    numeric: true,\r\n    sensitivity: \"base\"\r\n  });\r\n\r\n  let distrib_arr = [];\r\n  allFeatures.forEach(feat_name => {\r\n    let r = Object.entries(dist[feat_name]);\r\n    r.sort((a, b) => collator.compare(a[0], b[0]));\r\n    distrib_arr.push(r);\r\n  });\r\n\r\n  return distrib_arr;\r\n}\r\n","import { calculateFairnessMetrics } from \"../util/generateSubgroups\";\r\n\r\nfunction shannonEntropy(arr, size) {\r\n  let s = 0;\r\n  Object.keys(arr).forEach(k => {\r\n    arr[k] = arr[k] / size;\r\n    let v = arr[k];\r\n    if (v !== 0) {\r\n      s += v * Math.log2(v);\r\n    }\r\n  });\r\n  return -s;\r\n}\r\n\r\n/**\r\n * Given an array of instances with a class, output label, and cluster, returns an array of clusters\r\n * with the defining feature, corresponding values, instances that belong to\r\n * the cluster, and performance metrics.\r\n */\r\nexport function getClusters(data, feats, vals) {\r\n  // Get all features, ignoring class, out, and cluster\r\n  let features = Object.keys(data[0]);\r\n  features.splice(features.indexOf(\"class\"), 1);\r\n  features.splice(features.indexOf(\"out\"), 1);\r\n  features.splice(features.indexOf(\"cluster\"), 1);\r\n\r\n  // Calculte all possible features values\r\n  let all_atts = {};\r\n  features.forEach(attr => {\r\n    let s = new Set(data.map(p => p[attr]));\r\n    all_atts[attr] = s;\r\n  });\r\n\r\n  // Group instances by cluster\r\n  let clustInstances = [];\r\n  //let clusters = runClustering(data, feats, vals);\r\n  data.forEach(inst => {\r\n    // Ignore cluster -1, since unclustered\r\n    if (inst.cluster !== -1) {\r\n      if (clustInstances[inst.cluster] == null) {\r\n        clustInstances[inst.cluster] = [inst];\r\n      } else {\r\n        clustInstances[inst.cluster] = [...clustInstances[inst.cluster], inst];\r\n      }\r\n    }\r\n  });\r\n\r\n  // Calculate value count per cluster\r\n  let clustDistributions = [];\r\n  clustInstances.forEach((cluster, i) => {\r\n    clustDistributions[i] = {};\r\n    let clustDistrib = clustDistributions[i];\r\n    clustDistrib[\"size\"] = cluster.length;\r\n    features.forEach(feat => {\r\n      clustDistrib[feat] = {};\r\n      let featDistrib = clustDistrib[feat];\r\n      cluster.forEach(inst => {\r\n        featDistrib[inst[feat]] = featDistrib[inst[feat]]\r\n          ? featDistrib[inst[feat]] + 1\r\n          : 1;\r\n      });\r\n    });\r\n  });\r\n\r\n  // Calculate entropy per cluster per feature, normalizing value counts to get distributions\r\n  let clustEntropies = [];\r\n  clustDistributions.forEach((_, i) => {\r\n    clustEntropies[i] = {};\r\n    let clustEntr = clustEntropies[i];\r\n    let clustDistrib = clustDistributions[i];\r\n    let size = clustDistrib[\"size\"];\r\n    features.forEach(feat => {\r\n      clustEntr[feat] = shannonEntropy(clustDistrib[feat], size);\r\n    });\r\n  });\r\n\r\n  // TODO: Let user set or see more than 3 features\r\n  // Get top K defining features and values for each cluster\r\n  let clustDefining = [];\r\n  clustEntropies.forEach((cluster, i) => {\r\n    let orderedFeats = Object.keys(cluster).sort((a, b) => {\r\n      return cluster[a] - cluster[b];\r\n    });\r\n\r\n    let clustDistrib = clustDistributions[i];\r\n    let orderedVals = orderedFeats.map(feat => {\r\n      let vals = clustDistrib[feat];\r\n      return Object.keys(vals).reduce((a, b) => (vals[a] > vals[b] ? a : b));\r\n    });\r\n\r\n    clustDefining[i] = {\r\n      feats: orderedFeats,\r\n      clusterid: i,\r\n      vals: orderedVals,\r\n      insts: clustInstances[i],\r\n      metrics: calculateFairnessMetrics(clustInstances[i]),\r\n      distrib: clustDistributions[i],\r\n      type: \"bottom\"\r\n    };\r\n  });\r\n\r\n  return clustDefining;\r\n}\r\n","export const PRIMARY_COLOR = \"#1D2737\";\r\nexport const SECONDARY_COLOR = \"#5a6d94\";\r\nexport const TERTIARY_COLOR = \"#d6d6d6\";\r\nexport const HOVERED_COLOR = \"#2979ff\";\r\nexport const CLICKED_COLOR = \"#b71c1c\";\r\n\r\nexport const METRICS = [\r\n  { label: \"Accuracy\", value: \"acc\", key: \"acc\" },\r\n  { label: \"Precision\", value: \"prec\", key: \"prec\" },\r\n  { label: \"Recall\", value: \"rec\", key: \"rec\" },\r\n  { label: \"Specificity\", value: \"spec\", key: \"spec\" },\r\n  { label: \"Negative Predictive Value\", value: \"npv\", key: \"npv\" },\r\n  { label: \"False Negative Rate\", value: \"fnr\", key: \"fnr\" },\r\n  { label: \"False Positive Rate\", value: \"fpr\", key: \"fpr\" },\r\n  { label: \"False Discovery Rate\", value: \"fdr\", key: \"fdr\" },\r\n  { label: \"False Omission Rate\", value: \"for\", key: \"for\" },\r\n  { label: \"F1\", value: \"f1\", key: \"f1\" }\r\n];\r\n","// This WebWorker loads takes the loaded data and calcualtes fairnes metrics for it.\r\nexport default () => {\r\n  /**\r\n   * Calculate Common Fairness Metrics\r\n   *\r\n   * @param counts: counts of tp, tn, fp, tn, p, n\r\n   * Note:\r\n   * acc = accuracy\r\n   * rec = recall\r\n   * prec = precision\r\n   * spec = specificity\r\n   * npv = negative predictive value\r\n   * fnr = false negative rate or miss rate\r\n   * fpr = false positive rate\r\n   * fdr = false discovery rate\r\n   * for = false omission rate\r\n   * f1 = f1 score\r\n   */\r\n  function calculateFairnessMetrics(data) {\r\n    let m = calculateBaseRates(data);\r\n\r\n    let metrics = {\r\n      size: data.length,\r\n      p: (100 * m.p) / data.length,\r\n      n: (100 * m.n) / data.length,\r\n      acc: (100 * (m.tp + m.tn)) / (m.p + m.n),\r\n      rec: (100 * m.tp) / (m.tp + m.fn),\r\n      spec: (100 * m.tn) / (m.fp + m.tn),\r\n      prec: (100 * m.tp) / (m.tp + m.fp),\r\n      npv: (100 * m.tn) / (m.tn + m.fn),\r\n      fnr: (100 * m.fn) / (m.fn + m.tp),\r\n      fpr: (100 * m.fp) / (m.fp + m.tn),\r\n      fdr: (100 * m.fp) / (m.fp + m.tp),\r\n      for: (100 * m.fn) / (m.fn + m.tn),\r\n      f1: (100 * 2 * m.tp) / (2 * m.tp + m.fp + m.fn)\r\n    };\r\n\r\n    Object.keys(metrics).forEach(k => {\r\n      if (isNaN(metrics[k])) {\r\n        metrics[k] = 0;\r\n      }\r\n    });\r\n\r\n    return metrics;\r\n  }\r\n\r\n  /** Calculate the base classification COUNTS for a group of instances */\r\n  function calculateBaseRates(items) {\r\n    let p = 0;\r\n    let n = 0;\r\n    let tp = 0;\r\n    let tn = 0;\r\n    let fp = 0;\r\n    let fn = 0;\r\n\r\n    items.forEach(item => {\r\n      let predicted = Math.round(parseFloat(item[\"out\"]));\r\n      let actual = parseInt(item[\"class\"], 10);\r\n\r\n      if (predicted === 1 && actual === 1) {\r\n        tp++;\r\n        p++;\r\n      } else if (predicted === 0 && actual === 0) {\r\n        tn++;\r\n        n++;\r\n      } else if (predicted === 1 && actual === 0) {\r\n        fp++;\r\n        n++;\r\n      } else {\r\n        fn++;\r\n        p++;\r\n      }\r\n    });\r\n\r\n    return {\r\n      p: p,\r\n      n: n,\r\n      tp: tp,\r\n      tn: tn,\r\n      fp: fp,\r\n      fn: fn\r\n    };\r\n  }\r\n\r\n  /** Calculate distribution over instances */\r\n  function calcValueDist(insts, allFeatures, allValues) {\r\n    // init dist\r\n    let dist = {};\r\n    allFeatures.forEach((f, i) => {\r\n      let thisVals = allValues[i];\r\n      let v_dist = {};\r\n      thisVals.forEach((v, i) => {\r\n        v_dist[v] = 0;\r\n      });\r\n      dist[f] = v_dist;\r\n    });\r\n\r\n    // populate dist\r\n    insts.forEach((item, i) => {\r\n      Object.entries(item).forEach(tuple => {\r\n        // tuple = [\"age\", 17]\r\n        dist[tuple[0]][tuple[1]] += 1;\r\n      });\r\n    });\r\n\r\n    return dist;\r\n  }\r\n\r\n  self.addEventListener(\"message\", function(e) { // eslint-disable-line no-restricted-globals\r\n    let out = {};\r\n    let data = e.data;\r\n\r\n    out.data = data;\r\n    out.avgs = calculateFairnessMetrics(data);\r\n    out.feats = Object.keys(data[0]);\r\n\r\n    // calculate values\r\n    let vals = [];\r\n    for (let i = 0; i < out.feats.length; i++) {\r\n      let s = new Set(data.map(p => p[out.feats[i]]));\r\n      let s_arr = Array.from(s);\r\n      vals.push(s_arr);\r\n    }\r\n\r\n    out.vals = vals;\r\n\r\n    // calculate global feat distribution\r\n    let distrib = calcValueDist(data, out.feats, out.vals);\r\n    let distrib_arr = [];\r\n\r\n    let collator = new Intl.Collator(undefined, {\r\n      numeric: true,\r\n      sensitivity: \"base\"\r\n    });\r\n\r\n    out.feats.forEach(feat_name => {\r\n      let r = Object.entries(distrib[feat_name]);\r\n      r.sort((a, b) => collator.compare(a[0], b[0]));\r\n      distrib_arr.push(r);\r\n    });\r\n\r\n    out.distrib = distrib_arr;\r\n\r\n    postMessage(out);\r\n  });\r\n};\r\n","export default class WebWorker {\r\n  constructor(worker) {\r\n    const code = worker.toString();\r\n    const blob = new Blob([\"(\" + code + \")()\"]);\r\n    return new Worker(URL.createObjectURL(blob));\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  mark: { type: \"bar\", tooltip: true },\r\n  width: 250,\r\n  transform: [\r\n    {\r\n      calculate: \"datum.val/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  encoding: {\r\n    y: {\r\n      field: \"name\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\", labelFontSize: 13, labelPadding: 10 }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      aggregate: \"sum\",\r\n      type: \"quantitative\",\r\n      axis: { title: \"Ground Truth Label Balance\", format: \"%\" }\r\n    },\r\n    color: {\r\n      field: \"color\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [\"hovpos\", \"hovneg\", \"clickpos\", \"clickneg\"],\r\n        range: [\r\n          \"#64b5f6\",\r\n          \"rgba(100, 181, 246, .3)\",\r\n          \"#e57373\",\r\n          \"rgba(229, 115, 115, .3)\"\r\n        ]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass ClassDistribution extends Component {\r\n  render() {\r\n    let data = [];\r\n    if (this.props.clickedGroup !== undefined) {\r\n      data.push({\r\n        name: \"Pinned\",\r\n        type: \"Positive\",\r\n        val: this.props.clickedGroup.metrics.p,\r\n        color: \"clickpos\"\r\n      });\r\n      data.push({\r\n        name: \"Pinned\",\r\n        type: \"Negative\",\r\n        val: this.props.clickedGroup.metrics.n,\r\n        color: \"clickneg\"\r\n      });\r\n    }\r\n    if (this.props.hoveredGroup !== undefined) {\r\n      data.push({\r\n        name: \"Hovered\",\r\n        type: \"Positive\",\r\n        val: this.props.hoveredGroup.metrics.p,\r\n        color: \"hovpos\"\r\n      });\r\n      data.push({\r\n        name: \"Hovered\",\r\n        type: \"Negative\",\r\n        val: this.props.hoveredGroup.metrics.n,\r\n        color: \"hovneg\"\r\n      });\r\n    }\r\n\r\n    return <VegaLite data={{ values: data }} spec={spec} />;\r\n  }\r\n}\r\n\r\nexport default ClassDistribution;\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  width: 250,\r\n  height: 50,\r\n  mark: \"bar\",\r\n  transform: [\r\n    {\r\n      calculate: \"datum.value/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  spacing: 5,\r\n  encoding: {\r\n    row: {\r\n      field: \"metric\",\r\n      type: \"ordinal\",\r\n      scale: { padding: 0 },\r\n      header: {title: \"\", labelLimit: 60},\r\n    },\r\n    y: {\r\n      field: \"group\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\", labels: false }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      type: \"quantitative\",\r\n      scale: {\r\n        domain: [0, 1]\r\n      },\r\n      axis: { title: \"\", format: \"%\" }\r\n    },\r\n    tooltip: {\r\n      field: \"percent\",\r\n      type: \"quantitative\"\r\n    },\r\n    color: {\r\n      field: \"group\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [\"hovered\", \"pinned\"],\r\n        // range: [HOVERED_COLOR, CLICKED_COLOR]\r\n        range: [\"#64b5f6\", \"#e57373\"]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass MetricsDistribution extends Component {\r\n  render() {\r\n    let data = [];\r\n    if (this.props.hoveredGroup) {\r\n      data = data.concat(\r\n        this.props.selectedMetrics.map(m => {\r\n          return {\r\n            group: \"hovered\",\r\n            metric: m.label,\r\n            value: this.props.hoveredGroup.metrics[m.value]\r\n          };\r\n        })\r\n      );\r\n    }\r\n    if (this.props.clickedGroup) {\r\n      data = data.concat(\r\n        this.props.selectedMetrics.map(m => {\r\n          return {\r\n            group: \"pinned\",\r\n            metric: m.label,\r\n            value: this.props.clickedGroup.metrics[m.value]\r\n          };\r\n        })\r\n      );\r\n    }\r\n    return <VegaLite data={{ values: data }} spec={spec} />;\r\n  }\r\n}\r\n\r\nexport default MetricsDistribution;\r\n","import Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport React, { Component } from \"react\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport ClassDistribution from \"./ClassDistribution\";\r\nimport \"../style/Radar.css\";\r\nimport MetricsDistribution from \"./MetricsDistribution\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { HOVERED_COLOR, CLICKED_COLOR } from \"../util/globals\";\r\n\r\nconst styles = {\r\n  card: {\r\n    width: \"25%\",\r\n    height: \"100%\",\r\n    marginTop: 70,\r\n    marginRight: 10,\r\n    overflow: \"scroll\"\r\n  },\r\n  featureStyle: {\r\n    textAlign: \"justify\"\r\n  },\r\n  avatar: {\r\n    backgroundColor: \"#1D2737\"\r\n  },\r\n  expand: {\r\n    margin: \"0px auto\"\r\n  },\r\n  metrics: {\r\n    marginTop: 10\r\n  },\r\n  hovered: {\r\n    color: HOVERED_COLOR,\r\n    paddingRight: 8\r\n  },\r\n  clicked: {\r\n    color: CLICKED_COLOR\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7,\r\n    marginBottom: 5\r\n  },\r\n  selectedGroups: {\r\n    marginTop: 8\r\n  },\r\n  feats: {\r\n    paddingLeft: 8\r\n  },\r\n  hoveredCell: {\r\n    paddingRight: 8\r\n  }\r\n};\r\n\r\nclass ExpandedCard extends Component {\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      nextProps.hovered === this.props.hovered &&\r\n      nextProps.clicked === this.props.clicked\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  export = () => {\r\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n    if (clickedGroup) {\r\n      function saveText(text, filename) {\r\n        var a = document.createElement(\"a\");\r\n        a.setAttribute(\r\n          \"href\",\r\n          \"data:text/plain;charset=utf-u,\" + encodeURIComponent(text)\r\n        );\r\n        a.setAttribute(\"download\", filename);\r\n        a.click();\r\n      }\r\n      saveText(JSON.stringify(clickedGroup), \"clickedgroup.json\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n    let hoveredGroup = this.props.activeGroups[this.props.hovered];\r\n\r\n    let featsClick = [];\r\n    if (clickedGroup) {\r\n      featsClick = clickedGroup.feats;\r\n      if (clickedGroup.type === \"bottom\") {\r\n        featsClick = clickedGroup.feats.slice(0, 5);\r\n      }\r\n    }\r\n\r\n    let featsHov = [];\r\n    if (hoveredGroup) {\r\n      featsHov = hoveredGroup.feats;\r\n      if (hoveredGroup.type === \"bottom\") {\r\n        featsHov = hoveredGroup.feats.slice(0, 5);\r\n      }\r\n    }\r\n    let feats_comb = [...new Set(featsHov.concat(featsClick))];\r\n\r\n    let feats = feats_comb.map((feat, i) => {\r\n      let hoveredCell = <TableCell />;\r\n      let clickedCell = <TableCell />;\r\n      if (this.props.clicked !== -1 && clickedGroup.feats.includes(feat)) {\r\n        clickedCell = (\r\n          <TableCell align={\"right\"}>\r\n            {clickedGroup.vals[clickedGroup.feats.indexOf(feat)]}\r\n          </TableCell>\r\n        );\r\n      }\r\n      if (this.props.hovered !== -1 && hoveredGroup.feats.includes(feat)) {\r\n        hoveredCell = (\r\n          <TableCell align={\"right\"}>\r\n            <span className={classes.hoveredCell}>{hoveredGroup.vals[hoveredGroup.feats.indexOf(feat)]}</span>\r\n          </TableCell>\r\n        );\r\n      }\r\n\r\n      return (\r\n        <TableRow key={i}>\r\n          <TableCell className={classes.feat}>{feat}</TableCell>\r\n          {clickedCell}\r\n          {hoveredCell}\r\n        </TableRow>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <Card className={classes.card}>\r\n        <CardContent>\r\n          <div className={classes.header}>\r\n            <h4 className={classes.selectedGroups}>Group Details</h4>\r\n            <Button\r\n              className={classes.exportButton}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.export}\r\n            >\r\n              Export\r\n            </Button>\r\n          </div>\r\n          <Divider />\r\n          <MetricsDistribution\r\n            hoveredGroup={hoveredGroup}\r\n            clickedGroup={clickedGroup}\r\n            selectedMetrics={this.props.selectedMetrics}\r\n          />\r\n          <ClassDistribution\r\n            hoveredGroup={hoveredGroup}\r\n            clickedGroup={clickedGroup}\r\n          />\r\n          <Paper className={classes.feats}>\r\n            <Table className={classes.table} padding=\"none\" size=\"small\">\r\n              <colgroup>\r\n                <col style={{ width: \"33%\" }} />\r\n                <col style={{ width: \"33%\" }} />\r\n                <col style={{ width: \"33%\" }} />\r\n              </colgroup>\r\n              <TableHead className={classes.tableHeader}>\r\n                <TableRow key={0}>\r\n                  <TableCell className={classes.feat}>Feature</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <span className={classes.clicked}>Pinned</span>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <span className={classes.hovered}>Hovered</span>\r\n                  </TableCell>\r\n                </TableRow>\r\n                <TableRow key={1}>\r\n                  <TableCell>Size</TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {clickedGroup && clickedGroup.metrics.size}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <span className={classes.hoveredCell}>{hoveredGroup && hoveredGroup.metrics.size}</span>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>{feats}</TableBody>\r\n            </Table>\r\n          </Paper>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(ExpandedCard);\r\n","import React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport d3tip from \"d3-tip\";\r\nimport \"../style/BoxPlot.css\";\r\nimport { TERTIARY_COLOR } from \"../util/globals\";\r\n\r\nconst boxWidth = 300;\r\nconst boxHeight = 100;\r\n\r\nclass Histogram extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    var margin = {\r\n        top: 50,\r\n        right: 10,\r\n        bottom: 0,\r\n        left: 10\r\n      },\r\n      width = boxWidth - margin.left - margin.right,\r\n      height = boxHeight - margin.top - margin.bottom;\r\n\r\n    this.state = {\r\n      margin,\r\n      width,\r\n      height\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      this.props.type === \"global\" &&\r\n      this.props.dataDistrib.length === 0 &&\r\n      nextProps.dataDistrib.length !== 0\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.props.type === \"click\" &&\r\n      this.props.clicked !== nextProps.clicked\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.props.type === \"hover\" &&\r\n      this.props.hovered !== nextProps.hovered\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.update();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.update();\r\n  }\r\n\r\n  update = () => {\r\n    if (this.props.type === \"global\") {\r\n      this.drawGlobalDistBar(\r\n        this.props.dataDistrib,\r\n        this.props.featName,\r\n        this.props.featIndex,\r\n        this.props.maxy\r\n      );\r\n    } else {\r\n      let groupIndex =\r\n        this.props.type === \"click\" ? this.props.clicked : this.props.hovered;\r\n\r\n      this.drawGroupDistBar(\r\n        this.props.activeGroups,\r\n        groupIndex,\r\n        this.props.type,\r\n        this.props.featName,\r\n        this.props.featIndex,\r\n        this.props.maxy\r\n      );\r\n    }\r\n  };\r\n\r\n  drawGlobalDistBar = (dataDistrib, feat, featIndex, maxy) => {\r\n    let arr = dataDistrib[featIndex];\r\n\r\n    this.drawBar(arr, featIndex, \"global\", maxy);\r\n  };\r\n\r\n  /**\r\n   * @param clickedGroupDist dist for this feature\r\n   * @param type: \"hover\" or \"click\"\r\n   */\r\n  drawGroupDistBar = (\r\n    activeGroups,\r\n    groupIndex,\r\n    type,\r\n    feat,\r\n    featIndex,\r\n    maxy\r\n  ) => {\r\n    // delete existing plots of this type\r\n    d3.select(\"#box-plot-bar-\" + type + \"-\" + featIndex).remove();\r\n\r\n    if (groupIndex >= 0) {\r\n      let group = activeGroups[groupIndex];\r\n\r\n      // TODO temp: need to change format of bottom up subgroups\r\n      if (group.type === \"top\") {\r\n        let feat_dist_arr = group.distrib[featIndex];\r\n        this.drawBar(feat_dist_arr, featIndex, \"bar-\" + type, maxy);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Draw the actual bars yah\r\n   * @param data_arr: [value, count]\r\n   * @param featIndex\r\n   * @param bar_type: \"\", \"bar-click\", or \"bar-hover\"\r\n   */\r\n  drawBar = (data_arr, featIndex, bar_type, maxy) => {\r\n    const node = this.node;\r\n\r\n    let svg = d3\r\n      .select(node)\r\n      .append(\"svg\")\r\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n      .attr(\"viewBox\", \"0 0 300 100\")\r\n      .attr(\"class\", \"box-plot\")\r\n      .attr(\"id\", \"box-plot-\" + bar_type + \"-\" + featIndex)\r\n      .append(\"g\")\r\n      .attr(\r\n        \"transform\",\r\n        \"translate(\" +\r\n          this.state.margin.left +\r\n          \",\" +\r\n          this.state.margin.top +\r\n          \")\"\r\n      );\r\n\r\n    // categorical X\r\n    let x = d3\r\n      .scaleBand()\r\n      .rangeRound([0, 300], 0.1)\r\n      .domain(\r\n        data_arr.map(d => {\r\n          return d[0];\r\n        })\r\n      );\r\n\r\n    let y = d3\r\n      .scaleLinear()\r\n      .range([this.state.height, 0])\r\n      .domain([0, maxy]);\r\n\r\n    let hght = this.state.height;\r\n\r\n    var tip = d3tip()\r\n      .attr(\"class\", \"d3-tip\")\r\n      .offset([-10, 0])\r\n      .html(function(d) {\r\n        return (\r\n          d[0] +\r\n          \": <span style='color:\" +\r\n          TERTIARY_COLOR +\r\n          \"'>\" +\r\n          d[1] +\r\n          \"</span>\"\r\n        );\r\n      });\r\n\r\n    svg.call(tip);\r\n\r\n    svg\r\n      .selectAll(\"rect\")\r\n      .data(data_arr)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", d => {\r\n        return x(d[0]);\r\n      })\r\n      .attr(\"y\", d => {\r\n        return y(d[1]);\r\n      })\r\n      .attr(\"width\", function(d) {\r\n        return x.bandwidth();\r\n      })\r\n      .attr(\"height\", function(d) {\r\n        return hght - y(d[1]);\r\n      })\r\n      .attr(\"id\", function(d, i) {\r\n        return \"rect-\" + featIndex + \"-\" + i;\r\n      })\r\n      .attr(\"class\", \"barchart-rect \" + bar_type)\r\n      .on(\"mouseover\", tip.show)\r\n      .on(\"mouseout\", tip.hide);\r\n  };\r\n\r\n  render() {\r\n    return <div ref={node => (this.node = node)} />;\r\n  }\r\n}\r\n\r\nexport default Histogram;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport Histogram from \"./Histogram\";\r\nimport {\r\n  PRIMARY_COLOR,\r\n  SECONDARY_COLOR,\r\n  TERTIARY_COLOR\r\n} from \"../util/globals\";\r\n\r\n// import { FaInfoCircle } from \"react-icons/fa\";\r\n\r\nconst styles = {\r\n  drawer: {\r\n    width: \"20%\",\r\n    flexShrink: 0,\r\n    marginTop: 65,\r\n    maxWidth: 360\r\n  },\r\n  feature: {\r\n    margin: 10\r\n  },\r\n  button: {\r\n    margin: \"0px auto\"\r\n  },\r\n  listItem: {\r\n    paddingBottom: \"20px\",\r\n    height: 100,\r\n    alignItems: \"baseline\"\r\n  },\r\n  listText: {\r\n    height: 25\r\n  },\r\n  radio: {\r\n    top: \"25%\"\r\n  },\r\n  divider: {\r\n    marginTop: 5\r\n  },\r\n  boxLabel: {\r\n    textTransform: \"capitalize\",\r\n    fontSize: \"16px\",\r\n    color: PRIMARY_COLOR,\r\n    fontWeight: 500,\r\n    margin: 0\r\n  },\r\n  info: {\r\n    color: PRIMARY_COLOR,\r\n    cursor: \"pointer\"\r\n  }\r\n};\r\n\r\nclass FeatureDrawer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let sub = {};\r\n    let max_ys = [];\r\n\r\n    props.features.forEach((feat_name, feat_i) => {\r\n      sub[feat_i] = new Set();\r\n      let maxy = d3.max(props.dataDistrib[feat_i], d => {\r\n        return d[1];\r\n      });\r\n      max_ys.push(maxy);\r\n    });\r\n\r\n    this.state = {\r\n      checked: new Set(),\r\n      opened: new Set(),\r\n      subchecked: sub,\r\n      features: props.features,\r\n      max_ys: max_ys\r\n    };\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    if (\r\n      (this.props.features.length === 0 && nextProps.features.length > 0) ||\r\n      this.props.clicked !== nextProps.clicked ||\r\n      this.props.hovered !== nextProps.hovered ||\r\n      this.compareState(this.state, nextState)\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Determine if state has changed...only comparing size of sets for increased speed.\r\n   */\r\n  compareState = (oldState, newState) => {\r\n    if (\r\n      oldState.opened.size !== newState.opened.size ||\r\n      oldState.checked.size !== newState.checked.size\r\n    ) {\r\n      return true;\r\n    }\r\n\r\n    let out = false;\r\n    Object.keys(oldState.subchecked).forEach(k => {\r\n      if (newState.subchecked[k].size !== oldState.subchecked[k].size) {\r\n        out = true;\r\n      }\r\n    });\r\n\r\n    return out;\r\n  };\r\n\r\n  handleToggle = value => () => {\r\n    const { checked } = this.state;\r\n\r\n    let newChecked = new Set(checked);\r\n\r\n    if (newChecked.has(value)) {\r\n      newChecked.delete(value);\r\n    } else {\r\n      newChecked.add(value);\r\n    }\r\n\r\n    this.setState({\r\n      checked: newChecked\r\n    });\r\n  };\r\n\r\n  handleSubToggle = (feat_i, item_i) => () => {\r\n    const { subchecked, checked } = this.state;\r\n\r\n    let subnew = {};\r\n    Object.keys(subchecked).forEach(k => {\r\n      subnew[k] = new Set(subchecked[k]);\r\n    });\r\n\r\n    let n = new Set(checked);\r\n\r\n    if (subnew[feat_i].has(item_i)) {\r\n      subnew[feat_i].delete(item_i);\r\n    } else {\r\n      subnew[feat_i].add(item_i);\r\n    }\r\n\r\n    n.delete(feat_i);\r\n\r\n    this.setState({\r\n      subchecked: subnew,\r\n      checked: n\r\n    });\r\n  };\r\n\r\n  handleClick = feat_i => () => {\r\n    const { opened } = this.state;\r\n\r\n    let newOpened = new Set(opened);\r\n\r\n    if (newOpened.has(feat_i)) {\r\n      newOpened.delete(feat_i);\r\n    } else {\r\n      newOpened.add(feat_i);\r\n    }\r\n    this.setState({\r\n      opened: newOpened\r\n    });\r\n  };\r\n\r\n  handleHover = (i, j) => {\r\n    let selector = \"#rect-\" + i + \"-\" + j;\r\n\r\n    d3.select(selector)\r\n      .style(\"fill\", SECONDARY_COLOR)\r\n      .style(\"opacity\", 1);\r\n  };\r\n\r\n  handleUnhover = (i, j) => {\r\n    let selector = \"#rect-\" + i + \"-\" + j;\r\n\r\n    d3.select(selector)\r\n      .style(\"fill\", TERTIARY_COLOR)\r\n      .style(\"opacity\", 0.8);\r\n  };\r\n\r\n  handleClickSubgroup = () => {\r\n    let groups = {};\r\n    let sub = {};\r\n\r\n    this.props.features.forEach((feat_name, feat_i) => {\r\n      // get value\r\n      if (\r\n        this.state.checked.has(feat_i) ||\r\n        this.state.subchecked[feat_i].size > 0\r\n      ) {\r\n        let val_arr = [];\r\n\r\n        this.state.subchecked[feat_i].forEach(valIndex => {\r\n          val_arr.push(this.props.values[feat_i][valIndex]);\r\n        });\r\n\r\n        groups[feat_name] = val_arr;\r\n      }\r\n\r\n      // reset selection\r\n      sub[feat_i] = new Set();\r\n    });\r\n\r\n    this.props.createSubgroups(groups);\r\n\r\n    this.setState({ checked: new Set(), subchecked: sub });\r\n  };\r\n\r\n  render() {\r\n    const classes = this.props.classes;\r\n    const collator = new Intl.Collator(undefined, {\r\n      numeric: true,\r\n      sensitivity: \"base\"\r\n    });\r\n\r\n    if (this.props.features.length > 0) {\r\n      return (\r\n        <Drawer\r\n          className={classes.drawer}\r\n          classes={{ paper: classes.drawer }}\r\n          variant=\"permanent\"\r\n          anchor=\"left\"\r\n        >\r\n          <List>\r\n            <ListItem key={-1}>\r\n              <Tooltip\r\n                title=\"Create all subgroups of the selected features\"\r\n                placement=\"bottom\"\r\n              >\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  className={classes.button}\r\n                  onClick={this.handleClickSubgroup}\r\n                >\r\n                  Generate Subgroups\r\n                </Button>\r\n              </Tooltip>\r\n              {/* <FaInfoCircle className={classes.info} onClick={() => alert(\"hello\")}/> */}\r\n            </ListItem>\r\n            <Divider />\r\n\r\n            {this.props.features.map((feat_name, feat_i) => (\r\n              <div key={`section-${feat_i}`}>\r\n                <ListItem\r\n                  className={classes.listItem}\r\n                  onClick={this.handleClick(feat_i)}\r\n                >\r\n                  <p className={classes.boxLabel}>{feat_name}</p>\r\n                  {/* Global BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    dataDistrib={this.props.dataDistrib}\r\n                    featIndex={feat_i}\r\n                    type={\"global\"}\r\n                    maxy={this.state.max_ys[feat_i]}\r\n                  />\r\n                  {/* Clicked BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    featIndex={feat_i}\r\n                    clicked={this.props.clicked}\r\n                    hovered={this.props.hovered}\r\n                    activeGroups={this.props.activeGroups}\r\n                    type={\"click\"}\r\n                    maxy= {this.state.max_ys[feat_i]}\r\n                  />\r\n                  {/* Hovered BoxPlot */}\r\n                  <Histogram\r\n                    featName={feat_name}\r\n                    featIndex={feat_i}\r\n                    clicked={this.props.clicked}\r\n                    hovered={this.props.hovered}\r\n                    activeGroups={this.props.activeGroups}\r\n                    type={\"hover\"}\r\n                    maxy={this.state.max_ys[feat_i]}\r\n                  />\r\n\r\n                  <ListItemSecondaryAction className={classes.radio}>\r\n                    <Checkbox\r\n                      onChange={this.handleToggle(feat_i)}\r\n                      checked={this.state.checked.has(feat_i)}\r\n                      disabled={this.state.subchecked[feat_i].size > 0}\r\n                    />\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n\r\n                <Collapse\r\n                  in={this.state.opened.has(feat_i)}\r\n                  timeout=\"auto\"\r\n                  unmountOnExit\r\n                >\r\n                  {this.props.values[feat_i]\r\n                    .sort(collator.compare)\r\n                    .map((value, value_i) => (\r\n                      <ListItem\r\n                        key={`item-${feat_i}-${value_i}`}\r\n                        button\r\n                        onMouseOver={e => this.handleHover(feat_i, value_i, e)}\r\n                        onMouseOut={e => this.handleUnhover(feat_i, value_i, e)}\r\n                      >\r\n                        <ListItemText primary={value} />\r\n\r\n                        <ListItemSecondaryAction>\r\n                          <Checkbox\r\n                            onChange={this.handleSubToggle(feat_i, value_i)}\r\n                            checked={this.state.subchecked[feat_i].has(value_i)}\r\n                          />\r\n                        </ListItemSecondaryAction>\r\n                      </ListItem>\r\n                    ))}\r\n                </Collapse>\r\n                <Divider className={classes.divider} />\r\n              </div>\r\n            ))}\r\n          </List>\r\n        </Drawer>\r\n      );\r\n    }\r\n\r\n    return <div className={classes.drawer}>Loading...</div>;\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(FeatureDrawer);\r\n","import React, { Component } from \"react\";\r\nimport VegaLite from \"react-vega-lite\";\r\nimport { PRIMARY_COLOR } from \"../util/globals\";\r\n\r\nconst spec = {\r\n  $schema: \"https://vega.github.io/schema/vega-lite/v3.json\",\r\n  height: 50,\r\n  width: 75,\r\n  data: {\r\n    name: \"myData\"\r\n  },\r\n  transform: [\r\n    {\r\n      calculate: \"datum.makeup/100\",\r\n      as: \"percent\"\r\n    }\r\n  ],\r\n  mark: {type: \"bar\", tooltip: true},\r\n  encoding: {\r\n    y: {\r\n      field: \"value\",\r\n      type: \"ordinal\",\r\n      axis: { title: \"\" },\r\n      sort: { field: \"makeup\", order: \"descending\" }\r\n    },\r\n    x: {\r\n      field: \"percent\",\r\n      type: \"quantitative\",\r\n      axis: { title: \"\", format: \"%\" }\r\n    },\r\n    color: {\r\n      field: \"primary\",\r\n      type: \"nominal\",\r\n      scale: {\r\n        domain: [0, 1],\r\n        range: [PRIMARY_COLOR, \"#718C73\"]\r\n      },\r\n      legend: null\r\n    }\r\n  }\r\n};\r\n\r\nclass ClusterDistribution extends Component {\r\n  render() {\r\n    let cluster = this.props.cluster;\r\n    let feature = this.props.feature;\r\n\r\n    let distrib = cluster.distrib[feature];\r\n    let data = this.props.values[this.props.features.indexOf(feature)].map(\r\n      (val, i) => {\r\n        if (distrib[val]) {\r\n          return {\r\n            value: val,\r\n            makeup: distrib[val] * 100,\r\n            primary: val === this.props.maxVal ? 1 : 0\r\n          };\r\n        } else {\r\n          return {\r\n            value: val,\r\n            makeup: 0,\r\n            primary: 0\r\n          };\r\n        }\r\n      }\r\n    );\r\n\r\n    // only take top 3 so labels are visible on plot\r\n    data = data.sort((a, b) => {\r\n      return b.makeup - a.makeup;\r\n    })\r\n\r\n    data = data.slice(0, 4)\r\n\r\n    return (\r\n      <VegaLite\r\n        data={{ values: data }}\r\n        spec={spec}\r\n        style={{ paddingLeft: 0 }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClusterDistribution;\r\n","// Gets all neighbors in activeGroups that only have one feature difference.\r\nexport function getNeighbors(subgroup, activeGroups) {\r\n  let oneAwayGroups = [];\r\n  activeGroups.forEach(group => {\r\n    let same = group.feats.length;\r\n    let diffFeatInd = -1;\r\n    subgroup.feats.forEach((feat, ind) => {\r\n      let i = group.feats.indexOf(feat);\r\n      if (i >= 0) {\r\n        if (group.vals[i] === subgroup.vals[ind]) {\r\n          same--;\r\n        } else {\r\n          diffFeatInd = ind;\r\n        }\r\n      }\r\n    });\r\n    if (same === 1) {\r\n      group[\"featDiff\"] = diffFeatInd;\r\n      oneAwayGroups.push(group);\r\n    }\r\n  });\r\n  return oneAwayGroups;\r\n}\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport React, { Component } from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ClusterDistribution from \"./ClusterDistribution\";\r\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { CLICKED_COLOR, METRICS } from \"../util/globals\";\r\nimport { getNeighbors } from \"../util/neighboringClusters\";\r\nimport { TableHead } from \"@material-ui/core\";\r\nimport \"../style/GroupSuggestions.css\";\r\n\r\nconst styles = {\r\n  paper: {\r\n    height: 350,\r\n    overflow: \"scroll\",\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n    marginTop: 30\r\n  },\r\n  metrics: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7\r\n  },\r\n  header: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"space-between\",\r\n    padding: 7\r\n  },\r\n  cards: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\",\r\n    justifyContent: \"center\"\r\n  },\r\n  cardContent: {\r\n    padding: 0\r\n  },\r\n  divider: {\r\n    marginTop: 10,\r\n    marginBottom: 10\r\n  },\r\n  headerDivider: {\r\n    marginBottom: 7\r\n  },\r\n  table: {\r\n    width: \"100%\"\r\n  },\r\n  fab: {\r\n    float: \"right\"\r\n  },\r\n  paging: {\r\n    float: \"right\",\r\n    display: \"inline-flex\",\r\n    marginTop: 7,\r\n    justifyContent: \"center\"\r\n  },\r\n  label: {\r\n    textTransform: \"capitalize\"\r\n  },\r\n  value: {\r\n    color: \"#718C73\"\r\n  },\r\n  similarGroups: {\r\n    display: \"inline-flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\"\r\n  },\r\n  settings: {\r\n    display: \"inline-flex\"\r\n  },\r\n  sortText: {\r\n    marginRight: 13,\r\n    marginTop: 7\r\n  },\r\n  diffTable: {\r\n    marginTop: 10\r\n  },\r\n  leftCell: {\r\n    paddingLeft: \"10px\",\r\n    maxWidth: 50\r\n  }\r\n};\r\n\r\nclass GroupSuggestions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      page: 0,\r\n      showSimilar: false,\r\n      neighbors: [],\r\n      sort: \"acc\"\r\n    };\r\n  }\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.clustersLoaded) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  mouseEnter = cluster => {\r\n    this.props.suggestedHover(cluster);\r\n  };\r\n\r\n  mouseLeave = cluster => {\r\n    this.props.suggestedUnhover(cluster);\r\n  };\r\n\r\n  mouseClick = cluster => {\r\n    this.props.suggestedClick(cluster);\r\n  };\r\n\r\n  pageRight = () => {\r\n    if (this.state.page * 2 + 3 < this.props.clusters.length) {\r\n      this.setState({\r\n        page: this.state.page + 1\r\n      });\r\n    }\r\n  };\r\n\r\n  pageLeft = () => {\r\n    if (this.state.page !== 0) {\r\n      this.setState({\r\n        page: this.state.page - 1\r\n      });\r\n    }\r\n  };\r\n\r\n  changeView = val => {\r\n    if (val.target.value === 0) {\r\n      this.setState({\r\n        showSimilar: false\r\n      });\r\n    } else {\r\n      if (this.props.clicked !== -1) {\r\n        this.setState({\r\n          neighbors: getNeighbors(\r\n            this.props.activeGroups[this.props.clicked],\r\n            this.props.activeGroups.slice()\r\n          ),\r\n          showSimilar: true\r\n        });\r\n      } else {\r\n        this.setState({\r\n          showSimilar: true\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  changeSort = val => {\r\n    this.setState({\r\n      sort: val.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    // SIMILAR subgroups\r\n    if (this.state.showSimilar && this.state.neighbors.length !== 0 && this.props.clicked !== -1) {\r\n      let clickedGroup = this.props.activeGroups[this.props.clicked];\r\n      let similarGroups = this.state.neighbors\r\n        .sort((a, b) => {\r\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\r\n        })\r\n        .map((neigh, index) => {\r\n          return (\r\n            <Card\r\n              className={\"similar-card\"}\r\n              key={index}\r\n              onMouseEnter={_ => this.mouseEnter(neigh)}\r\n              onMouseLeave={_ => this.mouseLeave(neigh)}\r\n              onClick={_ => this.mouseClick(neigh)}\r\n            >\r\n              <CardContent className={classes.cardContent}>\r\n                <Table className={classes.table} padding=\"dense\">\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell>\r\n                        <b> Group {this.state.page * 2 + index + 1} </b>\r\n                        <br />\r\n                        {neigh.type === \"top\" ? \"Generated\" : \"Suggested\"}\r\n                      </TableCell>\r\n                      <TableCell />\r\n                      <TableCell align=\"right\">\r\n                        {neigh.metrics.size} Instances\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n                <Table className={classes.diffTable} padding=\"dense\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell>Feature Difference</TableCell>\r\n                      <TableCell style={{ color: CLICKED_COLOR }} align=\"right\">\r\n                        Pinned\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"#718C73\" }} align=\"right\">\r\n                        Similar\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    <TableCell>{clickedGroup.feats[neigh.featDiff]}</TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {clickedGroup.vals[neigh.featDiff]}\r\n                    </TableCell>\r\n                    <TableCell align=\"right\">\r\n                      {\r\n                        neigh.vals[\r\n                          neigh.feats.indexOf(\r\n                            clickedGroup.feats[neigh.featDiff]\r\n                          )\r\n                        ]\r\n                      }\r\n                    </TableCell>\r\n                  </TableBody>\r\n                </Table>\r\n              </CardContent>\r\n            </Card>\r\n          );\r\n        });\r\n\r\n      return (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n            <FormControl>\r\n              <Select value={1} onChange={this.changeView}>\r\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\r\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className={classes.settings}>\r\n              <Typography variant=\"body1\" className={classes.sortText}>\r\n                Sort by:\r\n              </Typography>\r\n              <FormControl>\r\n                <Select value={this.state.sort} onChange={this.changeSort}>\r\n                  {METRICS.map(m => (\r\n                    <MenuItem value={m.value}>{m.label}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </div>\r\n          </div>\r\n          <Divider className={classes.headerDivider} />\r\n          <div className={classes.similarGroups}>{similarGroups}</div>\r\n        </Paper>\r\n      );\r\n    } else {\r\n      // SUGGESTED subgroups\r\n      // Get least performing subgroups.\r\n      let bottomClusters = this.props.clusters\r\n        .filter(clust => clust.metrics.size > this.props.minSize)\r\n        .sort((a, b) => {\r\n          return a.metrics[this.state.sort] - b.metrics[this.state.sort];\r\n        })\r\n        .slice(this.state.page * 2, this.state.page * 2 + 2);\r\n\r\n      let cards = bottomClusters.map((clust, index) => (\r\n        <Card\r\n          className={\"suggested-card\"}\r\n          key={index}\r\n          onMouseEnter={_ => this.mouseEnter(clust)}\r\n          onMouseLeave={_ => this.mouseLeave(clust)}\r\n          onClick={_ => this.mouseClick(clust)}\r\n        >\r\n          <CardContent className={classes.cardContent}>\r\n            <Table className={classes.table} padding=\"none\">\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell padding=\"none\" className={classes.leftCell}>\r\n                    <b>Group {this.state.page * 2 + index + 1}</b>\r\n                  </TableCell>\r\n                  <TableCell width={80} padding=\"dense\" align=\"right\">\r\n                    {clust.metrics.size} Instances\r\n                  </TableCell>\r\n                </TableRow>\r\n                {clust.feats.map((feat, i) => (\r\n                  <TableRow key={i}>\r\n                    <TableCell padding=\"none\" className={classes.leftCell}>\r\n                      <b className={classes.label}>{feat}</b>\r\n                      <br />\r\n                      <span className={classes.value}>{clust.vals[i]}</span>\r\n                    </TableCell>\r\n                    <TableCell\r\n                      padding=\"none\"\r\n                      className={classes.cell}\r\n                      align=\"right\"\r\n                    >\r\n                      <ClusterDistribution\r\n                        maxVal={clust.vals[i]}\r\n                        features={this.props.features}\r\n                        values={this.props.values}\r\n                        cluster={clust}\r\n                        feature={feat}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </CardContent>\r\n        </Card>\r\n      ));\r\n\r\n      return (\r\n        <Paper className={classes.paper}>\r\n          <div className={classes.header}>\r\n            <FormControl>\r\n              <Select value={0} onChange={this.changeView}>\r\n                <MenuItem value={0}>Suggested Subgroups</MenuItem>\r\n                <MenuItem value={1}>Similar Subgroups</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <div className={classes.settings}>\r\n              <Typography variant=\"body1\" className={classes.sortText}>\r\n                Sort by:\r\n              </Typography>\r\n              <FormControl>\r\n                <Select value={this.state.sort} onChange={this.changeSort}>\r\n                  {METRICS.map(m => (\r\n                    <MenuItem key={m.label} value={m.value}>{m.label}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <div className={classes.paging}>\r\n                <ChevronLeft onClick={this.pageLeft} />\r\n                <Typography variant=\"body1\">\r\n                  {this.state.page * 2 + 1} -{\" \"}\r\n                  {this.state.page * 2 + 2 > this.props.clusters.length\r\n                    ? this.props.clusters.length\r\n                    : this.state.page * 2 + 2}\r\n                </Typography>\r\n                <ChevronRight onClick={this.pageRight} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Divider className={classes.headerDivider} />\r\n          <div className={classes.cards}>{cards}</div>\r\n        </Paper>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(GroupSuggestions);\r\n","import React, { Component } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Select from \"react-select\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport { emphasize } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nconst styles = theme => ({\r\n  selectorWrapper: {\r\n    minWidth: 250,\r\n    color: \"white\",\r\n    marginRight: 20,\r\n    marginTop: 10\r\n  },\r\n  input: {\r\n    display: \"flex\",\r\n    padding: 0\r\n  },\r\n  valueContainer: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    overflow: \"hidden\"\r\n  },\r\n  chip: {\r\n    margin: `${theme.spacing.unit / 2}px ${theme.spacing.unit / 4}px`\r\n  },\r\n  chipFocused: {\r\n    backgroundColor: emphasize(\r\n      theme.palette.type === \"light\"\r\n        ? theme.palette.grey[300]\r\n        : theme.palette.grey[700],\r\n      0.08\r\n    )\r\n  },\r\n  noOptionsMessage: {\r\n    padding: `${theme.spacing.unit}px ${theme.spacing.unit * 2}px`\r\n  },\r\n  placeholder: {\r\n    position: \"absolute\",\r\n    left: 2,\r\n    fontSize: 16\r\n  },\r\n  paper: {\r\n    position: \"absolute\",\r\n    zIndex: 1,\r\n    marginTop: theme.spacing.unit,\r\n    left: 0,\r\n    right: 0\r\n  },\r\n  divider: {\r\n    height: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nfunction NoOptionsMessage(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.noOptionsMessage}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction inputComponent({ inputRef, ...props }) {\r\n  return <div ref={inputRef} {...props} />;\r\n}\r\n\r\nfunction Control(props) {\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      InputProps={{\r\n        inputComponent,\r\n        inputProps: {\r\n          className: props.selectProps.classes.input,\r\n          inputRef: props.innerRef,\r\n          children: props.children,\r\n          ...props.innerProps\r\n        }\r\n      }}\r\n      {...props.selectProps.textFieldProps}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Option(props) {\r\n  return (\r\n    <MenuItem\r\n      buttonRef={props.innerRef}\r\n      selected={props.isFocused}\r\n      component=\"div\"\r\n      style={{\r\n        fontWeight: props.isSelected ? 500 : 400\r\n      }}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </MenuItem>\r\n  );\r\n}\r\n\r\nfunction Placeholder(props) {\r\n  return (\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      className={props.selectProps.classes.placeholder}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nfunction ValueContainer(props) {\r\n  return (\r\n    <div className={props.selectProps.classes.valueContainer}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction MultiValue(props) {\r\n  return (\r\n    <Chip\r\n      tabIndex={-1}\r\n      label={props.children}\r\n      className={classNames(props.selectProps.classes.chip, {\r\n        [props.selectProps.classes.chipFocused]: props.isFocused\r\n      })}\r\n      onDelete={props.removeProps.onClick}\r\n      deleteIcon={<CancelIcon {...props.removeProps} />}\r\n    />\r\n  );\r\n}\r\n\r\nfunction Menu(props) {\r\n  return (\r\n    <Paper\r\n      square\r\n      className={props.selectProps.classes.paper}\r\n      {...props.innerProps}\r\n    >\r\n      {props.children}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nconst components = {\r\n  Control,\r\n  Menu,\r\n  MultiValue,\r\n  NoOptionsMessage,\r\n  Option,\r\n  Placeholder,\r\n  ValueContainer\r\n};\r\n\r\nclass MetricSelector extends Component {\r\n  handleChange = values => {\r\n    this.props.onMetricChange(values);\r\n  };\r\n\r\n  render() {\r\n    // these have to be defined out here or it breaks...idk man\r\n    var selectedOptions = this.props.selectedMetrics;\r\n    var suggs = this.props.suggestions;\r\n\r\n    return (\r\n      <div className={this.props.classes.selectorWrapper}>\r\n        <Select\r\n          classes={this.props.classes}\r\n          options={suggs}\r\n          components={components}\r\n          onChange={this.handleChange}\r\n          value={selectedOptions}\r\n          placeholder=\"Select Fairness Metrics\"\r\n          isMulti\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(MetricSelector);\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"../style/StripPlot.css\";\r\n\r\nconst styles = {\r\n  plot: {\r\n    display: \"inline-block\",\r\n    minWidth: 500,\r\n    width: \"100%\"\r\n  }\r\n};\r\n\r\nclass StripPlot extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let margin = {\r\n      top: 0,\r\n      right: 50,\r\n      bottom: 0,\r\n      left: 50\r\n    };\r\n    let width = 1000;\r\n    let height = 80;\r\n\r\n    let xScale = d3\r\n      .scaleLinear()\r\n      .range([0, width - margin.right - margin.left])\r\n      .domain([0, 100]);\r\n    let yScale = d3\r\n      .scaleLinear()\r\n      .range([height - margin.top - margin.bottom, 0])\r\n      .domain([0, 100]);\r\n\r\n    let xAxis = d3\r\n      .axisBottom()\r\n      .scale(xScale)\r\n      .tickPadding(8)\r\n      .ticks(8)\r\n      .tickFormat(function(d) {\r\n        return d * 1 + \"%\";\r\n      });\r\n\r\n    this.state = {\r\n      margin: margin,\r\n      width: width - margin.left - margin.right,\r\n      height: height - margin.top - margin.bottom,\r\n      xScale: xScale,\r\n      yScale: yScale,\r\n      xAxis: xAxis\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createStripPlot();\r\n  }\r\n\r\n  createStripPlot = () => {\r\n    const node = this.node;\r\n\r\n    d3.select(node)\r\n      .selectAll(\"svg\")\r\n      .remove();\r\n\r\n    this.props.selectedMetrics.forEach(m => {\r\n      let svg = d3\r\n        .select(node)\r\n        .append(\"svg\")\r\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\r\n        .attr(\"viewBox\", \"0 0 1000 105\")\r\n        .attr(\"id\", \"stripplot-\" + m.value)\r\n        .append(\"g\")\r\n        .attr(\r\n          \"transform\",\r\n          \"translate(\" +\r\n            this.state.margin.left +\r\n            \",\" +\r\n            this.state.margin.top +\r\n            \")\"\r\n        );\r\n\r\n      svg\r\n        .append(\"g\")\r\n        .attr(\"class\", \"x axis\")\r\n        .attr(\"transform\", \"translate(0,\" + this.state.height + \")\")\r\n        .call(this.state.xAxis)\r\n        .append(\"text\")\r\n        .text(m.label)\r\n        .attr(\"class\", \"axis-label\")\r\n        .attr(\"x\", -10)\r\n        .attr(\"y\", -10);\r\n    });\r\n\r\n    this.update();\r\n  };\r\n\r\n  update = () => {\r\n    this.props.selectedMetrics.forEach(m => {\r\n      let svg = d3.select(this.node).select(\"#stripplot-\" + m.value);\r\n\r\n      svg.selectAll(\".percentline\").remove();\r\n\r\n      svg\r\n        .selectAll(\".percentline\")\r\n        .data(this.props.activeGroups, d => d.id)\r\n        .enter()\r\n        .append(\"line\")\r\n        .filter(d => {\r\n          return d.metrics.size > this.props.minSize;\r\n        })\r\n        .attr(\"x1\", d => {\r\n          return this.state.xScale(d.metrics[m.value]) + 50;\r\n        })\r\n        .attr(\"x2\", d => {\r\n          return this.state.xScale(d.metrics[m.value]) + 50;\r\n        })\r\n        .attr(\"y1\", 30)\r\n        .attr(\"y2\", 80)\r\n        .attr(\"class\", \"percentline\")\r\n        .attr(\"id\", d => {\r\n          return \"linecluster\" + d.id;\r\n        })\r\n        .on(\"mouseover\", d => {\r\n          this.props.barHover(d.id);\r\n        })\r\n        .on(\"mouseout\", d => {\r\n          this.props.barHover(-1);\r\n        })\r\n        .on(\"click\", d => {\r\n          this.props.barClick(d.id);\r\n        });\r\n\r\n      delete this.props.avgs.size;\r\n\r\n      let avgG = svg\r\n        .selectAll(\"line.avg\")\r\n        .data(this.props.avgs)\r\n        .enter()\r\n        .append(\"g\");\r\n\r\n      avgG\r\n        .append(\"line\")\r\n        .attr(\"x1\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"x2\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"y1\", 20)\r\n        .attr(\"y2\", 90)\r\n        .style(\"stroke\", \"#5a6d94\")\r\n        .style(\"stroke-width\", 2)\r\n        .style(\"opacity\", 0.4);\r\n\r\n      avgG\r\n        .append(\"text\")\r\n        .text(d => \"avg: \" + d[m.value].toFixed(2) + \"%\")\r\n        .attr(\"text-anchor\", \"middle\")\r\n        .attr(\"x\", d => {\r\n          return this.state.xScale(d[m.value]) + 50;\r\n        })\r\n        .attr(\"y\", 15)\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", \"12px\")\r\n        .attr(\"fill\", \"#5a6d94\");\r\n    });\r\n  };\r\n\r\n  shouldComponentUpdate(nextProps, _) {\r\n    if (nextProps.minSize !== this.props.minSize) {\r\n      return true;\r\n    }\r\n    if (\r\n      nextProps.selectedMetrics.length !== this.props.selectedMetrics.length\r\n    ) {\r\n      return true;\r\n    }\r\n    if (nextProps.activeGroups.length === this.props.activeGroups.length) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, _) {\r\n    if (\r\n      prevProps.selectedMetrics.length !== this.props.selectedMetrics.length\r\n    ) {\r\n      this.createStripPlot();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    this.update();\r\n    return (\r\n      <div\r\n        className={this.props.classes.plot}\r\n        ref={node => (this.node = node)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(StripPlot);\r\n","import React, { Component } from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { FaMedium, FaScroll, FaGithub, FaGlobe } from \"react-icons/fa\";\r\nimport { PRIMARY_COLOR, TERTIARY_COLOR } from \"../util/globals\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n/* Datasets - Add new dataset imports here. */\r\nimport compasData from \"../data/compas.csv\";\r\nimport adultData from \"../data/adult.csv\";\r\n// import censusData from \"../data/census.csv\";\r\n\r\nconst styles = {\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\"\r\n  },\r\n  content: {\r\n    width: \"55%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: 65,\r\n    marginLeft: 10\r\n  },\r\n  subtitle: {\r\n    flexGrow: 1,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"center\"\r\n  },\r\n  tagline: {\r\n    flexGrow: 1,\r\n    marginLeft: 30,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"left\"\r\n  },\r\n  loadingScreen: {\r\n    minWidth: \"100%\",\r\n    minHeight: \"calc(100% + 22px)\",\r\n    marginTop: -22,\r\n    backgroundColor: PRIMARY_COLOR,\r\n    margin: \"0px auto\"\r\n  },\r\n  loadingText: {\r\n    paddingTop: 150,\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  },\r\n  loadingProgress: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"white\"\r\n  },\r\n  datasets: {\r\n    width: \"600px\",\r\n    margin: \"0px auto\",\r\n    marginTop: 10\r\n  },\r\n  tabletitle: {\r\n    marginTop: 50,\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  },\r\n  title: {\r\n    fontWeight: 800\r\n  },\r\n  adddata: {\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  },\r\n  dataLink: {\r\n    textDecorationColor: \"black\",\r\n    color: \"black\",\r\n    textDecoration: \"none\"\r\n  },\r\n  socialLink: {\r\n    padding: 10,\r\n    background: PRIMARY_COLOR,\r\n    margin: 10,\r\n    color: TERTIARY_COLOR,\r\n    fontFamily: \"Roboto\",\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    borderColor: \"white\",\r\n    borderRadius: 7,\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    cursor: \"pointer\"\r\n  },\r\n  social: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    marginTop: 70\r\n  },\r\n  icon: {\r\n    fontSize: 16,\r\n    marginRight: 10\r\n  }\r\n};\r\n\r\nclass Welcome extends Component {\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    let loadIcon = <></>\r\n    if (this.props.loading) {\r\n      loadIcon = <CircularProgress />\r\n    }\r\n\r\n    return (\r\n      <div className={classes.loadingScreen}>\r\n        <Typography\r\n          variant=\"h2\"\r\n          color=\"inherit\"\r\n          className={classes.loadingText}\r\n        >\r\n          <strong>SIDVis</strong>{\" \"}\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.subtitle}>\r\n          Audit Classification Models for Intersectional Bias\r\n        </Typography>\r\n        <Typography variant=\"h6\" className={classes.tabletitle}>\r\n          Select a Dataset\r\n        </Typography>\r\n        <Paper className={classes.datasets}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Dataset</TableCell>\r\n                <TableCell>Goal</TableCell>\r\n                <TableCell>Size</TableCell>\r\n                <TableCell align=\"center\">{loadIcon}</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            {/* Add a new row to this body for a dataset */}\r\n            <TableBody>\r\n              <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Adult\"\r\n                  >\r\n                    UCI Adult\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict income $50K</TableCell>\r\n                <TableCell>32,562</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={_ => this.props.loadData(adultData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n              <TableRow>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://github.com/propublica/compas-analysis/\"\r\n                  >\r\n                    COMPAS\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict recidivism</TableCell>\r\n                <TableCell>6,173</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={_ => this.props.loadData(compasData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n              {/* <TableRow> \r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  <a\r\n                    className={classes.dataLink}\r\n                    href=\"https://archive.ics.uci.edu/ml/datasets/Census-Income+%28KDD%29\"\r\n                  >\r\n                    UCI Census-Income\r\n                  </a>\r\n                </TableCell>\r\n                <TableCell>Predict income >$50K</TableCell>\r\n                <TableCell>199,523</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={_ => this.props.loadData(censusData)}\r\n                  >\r\n                    Select\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow> */}\r\n            </TableBody>\r\n          </Table>\r\n        </Paper>\r\n        <a href=\"https://github.com/poloclub/FairVis/blob/master/README.md\" className={classes.adddata}>\r\n          <p>Instructions for adding a custom dataset</p>\r\n        </a>\r\n\r\n        <div className={classes.social}>\r\n          <a href=\"https://arxiv.org/abs/1904.05419\">\r\n            <button className={classes.socialLink}>\r\n              <FaScroll className={classes.icon} />\r\n              Full Paper\r\n            </button>\r\n          </a>\r\n          <a href=\"https://medium.com/p/acbd362a3e2f\">\r\n            <button className={classes.socialLink}>\r\n              <FaMedium className={classes.icon} /> Blog\r\n            </button>\r\n          </a>\r\n          <a href=\"https://github.com/poloclub/FairVis\">\r\n            <button className={classes.socialLink}>\r\n              <FaGithub className={classes.icon} />\r\n              Code\r\n            </button>\r\n          </a>\r\n          <a href=\"https://cabreraalex.com/#/paper/fairvis\">\r\n            <button className={classes.socialLink}>\r\n              <FaGlobe className={classes.icon} />\r\n              Cite\r\n            </button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Welcome);\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {\r\n  createMuiTheme,\r\n  MuiThemeProvider,\r\n  withStyles\r\n} from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\nimport * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"../style/App.css\";\r\nimport { getClusters } from \"../util/clusterDescriptions\";\r\nimport { createSubgroups } from \"../util/generateSubgroups\";\r\nimport {\r\n  METRICS,\r\n  PRIMARY_COLOR,\r\n  SECONDARY_COLOR,\r\n  TERTIARY_COLOR\r\n} from \"../util/globals\";\r\nimport worker from \"../workers/dataLoader.js\";\r\nimport WebWorker from \"../workers/WebWorker\";\r\nimport ExpandedCard from \"./ExpandedCard\";\r\nimport FeatureDrawer from \"./FeatureDrawer\";\r\nimport GroupSuggestions from \"./GroupSuggestions\";\r\nimport MetricSelector from \"./MetricSelector\";\r\nimport StripPlot from \"./StripPlot\";\r\nimport Welcome from \"./Welcome\";\r\nimport ReactGA from 'react-ga';\r\n\r\nReactGA.initialize('UA-50459890-3');\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: PRIMARY_COLOR\r\n    },\r\n    secondary: {\r\n      main: SECONDARY_COLOR\r\n    }\r\n  },\r\n  overrides: {\r\n    MuiSlider: {\r\n      thumb: {\r\n        backgroundColor: \"#EBEBEB\"\r\n      },\r\n      track: {\r\n        backgroundColor: \"#EBEBEB\"\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst styles = {\r\n  appBar: {\r\n    zIndex: 1\r\n  },\r\n  body: {\r\n    display: \"flex\",\r\n    flexDirection: \"inline\"\r\n  },\r\n  content: {\r\n    width: \"55%\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginTop: 65,\r\n    marginLeft: 10\r\n  },\r\n  plot: {\r\n    width: \"100%\"\r\n  },\r\n  slider: {\r\n    width: 150,\r\n    padding: 20,\r\n    marginRight: 30\r\n  },\r\n  reset: {\r\n    float: \"right\"\r\n  },\r\n  subtitle: {\r\n    flexGrow: 1,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"center\"\r\n  },\r\n  tagline: {\r\n    flexGrow: 1,\r\n    marginLeft: 30,\r\n    color: TERTIARY_COLOR,\r\n    textAlign: \"left\"\r\n  },\r\n  loadingScreen: {\r\n    minWidth: \"100%\",\r\n    minHeight: \"calc(100% + 22px)\",\r\n    marginTop: -22,\r\n    backgroundColor: PRIMARY_COLOR,\r\n    margin: \"0px auto\"\r\n  },\r\n  loadingText: {\r\n    paddingTop: 150,\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  },\r\n  loadingProgress: {\r\n    display: \"block\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    color: \"white\"\r\n  },\r\n  datasets: {\r\n    width: \"600px\",\r\n    margin: \"0px auto\",\r\n    marginTop: 10\r\n  },\r\n  tabletitle: {\r\n    marginTop: 50,\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  },\r\n  title: {\r\n    fontWeight: 800\r\n  },\r\n  adddata: {\r\n    color: \"white\",\r\n    textAlign: \"center\"\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    document.title = \"FairVis - Audit Classification for Intersectional Bias\";\r\n\r\n    /**\r\n     * Every subgroup in the activeGroups array should have the following form:\r\n     * {\r\n     *  feats: -> Array of features defining the group\r\n     *  vals: -> Array of values corresponding to the features (same indices)\r\n     *  insts: -> Array of all the instances belonging to the subgroup\r\n     *  metrics: -> Object containing all the base metrics (Acc, Prec, etc.)\r\n     *  type: -> The type of subgroup it is, either 'top' or 'bottom'\r\n     *  distrib: -> Value distribution for each feature\r\n     * }\r\n     */\r\n    this.state = {\r\n      // Array of instances with features, label, class output, and cluster\r\n      data: [],\r\n      // distribution counts of data in same order as features, sorted by value\r\n      dataDistrib: {},\r\n      // Array of clusters from DBSCAN with metrics and value distribution\r\n      clusters: [],\r\n      // Array of active groups with values and metrics\r\n      activeGroups: [],\r\n      // Object of metrics for the overall group\r\n      avgs: [],\r\n\r\n      // Features and values for all instances\r\n      features: [],\r\n      values: [],\r\n\r\n      // State of StripPlot\r\n      hovered: -1,\r\n      clicked: -1,\r\n\r\n      // State for selected metrics, by default accuracy, recall, and specificity\r\n      selectedMetrics: METRICS.slice(0, 3),\r\n\r\n      minSize: 0,\r\n\r\n      loading: 0,\r\n      dataLoaded: false,\r\n      clustersLoaded: false,\r\n    };\r\n  }\r\n\r\n  loadData = data => {\r\n    this.setState({ loading: 1 });\r\n\r\n    // WebWorker to run preprocessing in parallel.\r\n    let loaderWorker = new WebWorker(worker);\r\n\r\n    loaderWorker.addEventListener(\"message\", r => {\r\n      let out = r.data;\r\n      let clusters = getClusters(out.data, out.feats, out.vals);\r\n      this.setState({\r\n        data: out.data,\r\n        dataDistrib: out.distrib,\r\n        avgs: [out.avgs],\r\n        features: out.feats,\r\n        values: out.vals,\r\n        clusters: clusters,\r\n        dataLoaded: true,\r\n        clustersLoaded: true\r\n      });\r\n    });\r\n    d3.csv(data).then(d => loaderWorker.postMessage(d));\r\n  };\r\n\r\n  createSubgroups = groups => {\r\n    // TODO: Prevent adding duplicate subgroups\r\n    let subgroups = createSubgroups(\r\n      this.state.data,\r\n      groups,\r\n      this.state.activeGroups.length,\r\n      this.state.features,\r\n      this.state.values\r\n    );\r\n    this.setState({\r\n      activeGroups: this.state.activeGroups.concat(subgroups)\r\n    });\r\n  };\r\n\r\n  // Either -1 or the cluster that was hovered.\r\n  suggestedHover = clust => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    const foundArr = this.state.activeGroups.filter(\r\n      el => el.clusterid === clust.clusterid\r\n    );\r\n\r\n    if (foundArr.length === 0) {\r\n      clust.id = this.state.activeGroups.length;\r\n\r\n      this.setState(\r\n        {\r\n          activeGroups: this.state.activeGroups.concat(clust),\r\n          hovered: clust.id\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"linehover\", true);\r\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n            \"lineclick\",\r\n            true\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"linehover\", true);\r\n      this.setState(\r\n        {\r\n          hovered: foundArr[0].id\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n            \"lineclick\",\r\n            true\r\n          );\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  suggestedUnhover = clust => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    let newActives = this.state.activeGroups.filter(\r\n      e => e.id === this.state.clicked || e.id !== clust.id\r\n    );\r\n\r\n    this.setState(\r\n      {\r\n        activeGroups: newActives,\r\n        hovered: -1\r\n      },\r\n      () => {\r\n        d3.selectAll(\"#linecluster\" + this.state.clicked).classed(\r\n          \"lineclick\",\r\n          true\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Have to set id to length -1 since groups gets added once on hover then again\r\n   * on click. If not it breaks when hovering later on\r\n   */\r\n  suggestedClick = clust => {\r\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\r\n\r\n    const foundArr = this.state.activeGroups.filter(\r\n      el => el.clusterid === clust.clusterid\r\n    );\r\n\r\n    if (foundArr.length === 0) {\r\n      clust.id = this.state.activeGroups.length;\r\n\r\n      this.setState(\r\n        {\r\n          activeGroups: this.state.activeGroups.concat(clust),\r\n          clicked: clust.id\r\n        },\r\n        () => {\r\n          d3.selectAll(\"#linecluster\" + clust.id).classed(\"lineclick\", true);\r\n        }\r\n      );\r\n    } else {\r\n      d3.selectAll(\"#linecluster\" + foundArr[0].id).classed(\"lineclick\", true);\r\n      this.setState({\r\n        clicked: foundArr[0].id\r\n      });\r\n    }\r\n  };\r\n\r\n  barHover = id => {\r\n    d3.selectAll(\".linehover\").classed(\"linehover\", false);\r\n\r\n    d3.selectAll(\"#linecluster\" + id).classed(\"linehover\", true);\r\n\r\n    this.setState({\r\n      hovered: id\r\n    });\r\n  };\r\n\r\n  barClick = id => {\r\n    d3.selectAll(\".lineclick\").classed(\"lineclick\", false);\r\n    d3.selectAll(\"#linecluster\" + id).classed(\"lineclick\", true);\r\n\r\n    this.setState({\r\n      clicked: id\r\n    });\r\n  };\r\n\r\n  changeMinSize = (_, val) => {\r\n    this.setState({\r\n      minSize: val\r\n    });\r\n  };\r\n\r\n  resetGroups = () => {\r\n    this.setState({\r\n      hovered: -1,\r\n      clicked: -1,\r\n      minSize: 0,\r\n      activeGroups: []\r\n    });\r\n  };\r\n\r\n  handleMetricsChange = m => {\r\n    this.setState({\r\n      selectedMetrics: m\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let classes = this.props.classes;\r\n\r\n    if (!this.state.dataLoaded) {\r\n      return <Welcome loadData={this.loadData} loading={this.state.loading} />;\r\n    }\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography\r\n              inline\r\n              variant=\"h4\"\r\n              color=\"inherit\"\r\n              className={classes.title}\r\n            >\r\n              FairVis\r\n            </Typography>\r\n            <Typography inline variant=\"h6\" className={classes.tagline}>\r\n              {\" \"}\r\n              Audit Classification for Intersectional Bias{\" \"}\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"inherit\">\r\n              Minimum Size: {this.state.minSize}\r\n            </Typography>\r\n            <Slider\r\n              className={classes.slider}\r\n              value={this.state.minSize}\r\n              onChange={this.changeMinSize}\r\n              step={1}\r\n              min={0}\r\n              max={\r\n                this.state.activeGroups.length === 0\r\n                  ? 0\r\n                  : d3.max(this.state.activeGroups, d => d.metrics.size)\r\n              }\r\n            />\r\n            <Button\r\n              className={classes.reset}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={this.resetGroups}\r\n            >\r\n              Reset Groups\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className={classes.body}>\r\n          <FeatureDrawer\r\n            features={this.state.features}\r\n            values={this.state.values}\r\n            createSubgroups={this.createSubgroups}\r\n            dataDistrib={this.state.dataDistrib}\r\n            dataLoaded={this.state.dataLoaded}\r\n            hovered={this.state.hovered}\r\n            clicked={this.state.clicked}\r\n            activeGroups={this.state.activeGroups}\r\n          />\r\n          <div className={classes.content}>\r\n            <MetricSelector\r\n              className={classes.metricSelector}\r\n              onMetricChange={this.handleMetricsChange}\r\n              suggestions={METRICS}\r\n              selectedMetrics={this.state.selectedMetrics}\r\n            />\r\n            <div className={classes.plot}>\r\n              <StripPlot\r\n                activeGroups={this.state.activeGroups}\r\n                avgs={this.state.avgs}\r\n                barHover={this.barHover}\r\n                barClick={this.barClick}\r\n                minSize={this.state.minSize}\r\n                selectedMetrics={this.state.selectedMetrics}\r\n              />\r\n            </div>\r\n            <GroupSuggestions\r\n              clusters={this.state.clusters}\r\n              minSize={this.state.minSize}\r\n              suggestedHover={this.suggestedHover}\r\n              suggestedUnhover={this.suggestedUnhover}\r\n              suggestedClick={this.suggestedClick}\r\n              clustersLoaded={this.state.clustersLoaded}\r\n              features={this.state.features}\r\n              values={this.state.values}\r\n              clicked={this.state.clicked}\r\n              activeGroups={this.state.activeGroups}\r\n            />\r\n          </div>\r\n          <ExpandedCard\r\n            hovered={this.state.hovered}\r\n            clicked={this.state.clicked}\r\n            activeGroups={this.state.activeGroups}\r\n            selectedMetrics={this.state.selectedMetrics}\r\n            clusters={this.state.clusters}\r\n          />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}